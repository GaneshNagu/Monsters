{"version":3,"sources":["Components/Card-list/Card-list.component.jsx","Components/Search-box/Search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cardlist","props","className","monsters","map","monster","src","image","alt","title","class","description","id","SearchBox","placeholder","handleChange","value","type","onChange","App","state","searchin","fetch","then","response","json","users","setState","this","console","log","filteredMonsters","filter","toLowerCase","includes","e","target","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAGaA,EAAW,SAACC,GAEtB,OAEK,qBAAKC,UAAU,YAAf,SAEQD,EAAME,SAASC,KAAI,SAAAC,GAAO,OACtB,sBAAKH,UAAU,QAAf,UACI,qBAAKA,UAAU,WAAWI,IAAKD,EAAQE,MAAOC,IAAI,YAClD,mBAAGN,UAAU,aAAb,SAA2BG,EAAQI,QACnC,sBAAKC,MAAM,UAAX,yBACI,sBAAMA,MAAM,cAAZ,SAA2BL,EAAQM,mBAJfN,EAAQO,UCP3CC,G,MAAY,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MACnD,OACI,sBAAKd,UAAY,eAAjB,UACI,8BACI,sDACJ,uBAAOe,KAAO,SACVf,UAAY,SACZgB,SAAaH,EACbD,YAAgBA,EAChBE,MAAOA,SC6BRG,E,kDAnCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXjB,SAAU,GACVkB,SAAS,IAJC,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,qCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACxB,SAASuB,S,oBAGzC,WAAU,IAAD,OAEP,EAA+BE,KAAKR,MAA5BjB,EAAR,EAAQA,SAAUkB,EAAlB,EAAkBA,SAClBQ,QAAQC,IAAI,YAAY3B,GACxB0B,QAAQC,IAAI,YAAYT,GAExB,IAAMU,EAAmB5B,EAAS6B,QAAO,SAAA3B,GAAO,OAC9CA,EAAQI,MAAMwB,cAAcC,SAASb,EAASY,kBAIhD,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,CAAWa,aAAc,SAAAoB,GAAC,OAAI,EAAKR,SAAS,CAAEN,SAAUc,EAAEC,OAAOpB,SAAUA,MAAOY,KAAKR,MAAMC,WACtF,cAAC,EAAD,CAAUlB,SAAU4B,W,GA9BjBM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2aa93d45.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Card-list/Card-list.styles.css';\r\n\r\nexport const Cardlist = (props) => {\r\n\r\n   return (\r\n        \r\n        <div className='card-list'>\r\n          {\r\n                props.monsters.map(monster => (\r\n                    <div className='boxes' key={monster.id} >\r\n                        <img className='imgclass' src={monster.image} alt='unknown' />\r\n                        <p className=\"titleclass\">{monster.title}</p>\r\n                        <div class=\"tooltip\">more Details\r\n                            <span class=\"tooltiptext\">{monster.description}</span>\r\n                        </div>\r\n                    </div>\r\n                    ))\r\n            }\r\n        </div>\r\n    \r\n    )\r\n\r\n}","import React from \"react\";\r\nimport '../Search-box/Search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange, value }) => {\r\n    return ( \r\n        <div className = 'searchStyles' >\r\n            <div>\r\n                <h1> Monsters rolodex </h1></div >\r\n            <input type = \"search\"\r\n                className = \"search\"\r\n                onChange = { handleChange }\r\n                placeholder = { placeholder }\r\n                value={value} />\r\n        \r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Cardlist } from './Components/Card-list/Card-list.component';\nimport { SearchBox} from './Components/Search-box/Search-box.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchin:\"\"\n    }\n\n  }\n\n  componentDidMount() {\n    fetch('https://fakestoreapi.com/products')\n      .then(response => response.json())\n      .then(users=>this.setState({monsters:users}))\n }\n\n  render() {\n\n    const { monsters, searchin } = this.state;\n    console.log(\"monsters:\"+monsters);\n    console.log(\"searchin:\"+searchin);\n\n    const filteredMonsters = monsters.filter(monster =>\n      monster.title.toLowerCase().includes(searchin.toLowerCase())\n      \n    );\n\n    return (\n      <div className=\"App\">\n        <SearchBox handleChange={e => this.setState({ searchin: e.target.value })} value={this.state.searchin}/>\n               <Cardlist monsters={filteredMonsters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}